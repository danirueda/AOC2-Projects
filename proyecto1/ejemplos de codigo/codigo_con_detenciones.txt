formato aritméticas: 
op	rs	rt	rd	shamt	funct
000001	00001	00010  	00011  	00000	000000  ADD R3, R1, R2

formato lw, sw, beq:
op	rs	rt		inm
000010 	00000	00001 	0000000000000000 		LW  R1, 0(R0)  dir 0

codigo inicial en la ram de instrucciones:

El valor inicial de los registros es 0 (partimos de un reset) 
El código está pensado para funcionar en un procesador capaz de gestionar los riesgos
Es un bucle infinito
Como hacemos preincremento va recorriendo la memoria a partir de la posición 4 sumándole el contenido de la posición 0


separado por campos:

000010 	00000	00001 	0000000000000000 		LW  R1, 0(R0)  dir 0
000110 	01000	00010 	0000000000000100 		LW_pre  R2, 4(R8)  dir 4
000001	00001	00010  	00011  	00000	000000  ADD R3, R1, R2	       dir 8		
000111 	00100	00011 	0000000000000100 		SW_pre  R3, 4(R4) dir C
queremos saltar a la posición 0, y el procesador calcula la dirección haciendo PC+4+ 4*Ëxt(inm) por eso ponemos fffB: 4*fffB+0014=0000		
000100	00000	00000	1111111111111011		beq r0, r2, dir0 dir 10; 


EN hexadecimal:

00001000000000010000000000000000 	08010000	LW  R1, 0(R0)
00011001000000100000000000000100 	19020004	LW  R2, 4(R8)
00000100001000100001100000000000  	04221800	ADD R3, R1, R2
00011100100000110000000000000100 	1C830004	SW_pre  R3, 4(R4)
00010000000000001111111111110111	1000FFFB	beq r0, r0, dir0 dir 24; 
